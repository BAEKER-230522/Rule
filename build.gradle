plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web' // web
    implementation 'org.springframework.boot:spring-boot-starter-validation' // validation

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'


    //Json Parsing
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'


    //RDBMS
    implementation 'com.h2database:h2' //h2 인메모리
    runtimeOnly 'com.mysql:mysql-connector-j'


    // api 호출
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    // jasypt 암호화
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

    // Query Dsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // kafka
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // cloud watch
    implementation'ca.pjer:logback-awslogs-appender:1.6.0'

    // resource security
//    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
//    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
//    implementation 'org.springframework.boot:spring-boot-starter-security'



}

tasks.named('test') {
    useJUnitPlatform()
    systemProperty "jasypt.encryptor.password", project.getProperty("jasypt.encryptor.password")

}

compileJava {
    options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated'
}
clean {
    delete file('src/main/generated')
}

jar{
    enabled = false
}



ext {
    set('springCloudVersion', "2022.0.3")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}