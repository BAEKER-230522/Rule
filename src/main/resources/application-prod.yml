spring:
  config:
    activate:
      on-profile: prod
  kafka:
    bootstrap-servers: ${custom.server}:9092
    consumer:
      group-id: baeker
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      linger:
        ms: 10
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ENC(9MqGJMExZVtquOvnM2ApkxpBJkpVtybic58tGOtFcuJTjzxs8jlA0owhHeWQ/tqIAipQUnueaUYl3wMGNtwC48D4YrP7irluZPg548hL6sWvn9N/+lKap62s1KWDhVP2olynUCus2sxHVy5OpQkRH4n4g6Vl8kus77VIa8PX155mS5W/sE4NRSQT9t1oxTId)
    username: ENC(plDde76MscNwKMt9v4A6Rw==)
    password: ENC(OH+qshDPtFh1h1gDdWExzz/t0BlOzVbo)

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true

logging.level:
  org.hibernate:
    SQL: debug
    orm.jdbc.bind: trace

jasypt:
  encryptor:
    bean: jasyptStringEncryptor



message:
  topic:
    name: "rule"



eureka:
  instance:
    instance-id: ${custom.server}:${server.port}
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${custom.server}:8761/eureka/
custom:
  server: 101.101.208.240