server:
  port: 8083

spring:
  data:
    redis:
      port: 6379
      host: localhost
  profiles:
    default: dev
  mvc:
    pathmatch:
      matching-strategy: path_pattern_parser
  application:
    name: rule
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: baeker
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      linger:
        ms: 10
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/rule_table?useUnicode=true&characterEncoding=utf8&autoReconnect=true&serverTimezone=Asia/Seoul
    username: root
    password: 1234

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        show_sql: true

eureka:
  instance:
    instance-id: ${spring.application.name}:${server.port}
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${custom.server}:8761/eureka/

logging.level:
  org.hibernate:
    SQL: debug
    orm.jdbc.bind: trace

jasypt:
  encryptor:
    bean: jasyptStringEncryptor
    





message:
  topic:
    name: "rule"

custom:
  jwt:
    secret-key: ENC(+GbV3Ykx/t5XFlaFHBZnXTzsSf9b3YChS2cVPTvCgwQmevtbB1Hfw91VMC/fTizxVssJvYiAMeQICsuoSrH5zNLh/jxJsXq/)
  server: 127.0.0.1
